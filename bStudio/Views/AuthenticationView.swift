//
//  AuthenticationView.swift
//  bStudio
//
//  Created by Pavel Vaitsikhouski on 24.09.21.
//

import SwiftUI

protocol AuthenticationDetails: ObservableObject {
    var clientName: String { get set }
    var clientPhoneNumber: String { get set }
    var comments: String { get set }
    
    func createParamsForRequest() -> [String: Any]
}

struct AuthenticationView<ViewModel>: View where ViewModel: AuthenticationDetails {
    @EnvironmentObject private var authenticationDetails: ViewModel
    @EnvironmentObject private var studio: Studio
    @EnvironmentObject private var bookingNavigation: BookingNavigation
    @State private var notFilledFieldErrorMessage: IdentifiableString?
    @State private var makeOrderError = false
    @State private var makeOrderRequestIsWorking = false
    @State private var shouldShowSuccessAlert = false
    
    var body: some View {
        VStack(alignment: .leading){
            title
            Spacer()
            content.padding(8)
            Spacer()
        }
        .padding(16)
        .bStudioNavigationBar(title: "VOSTOK'7")
        .alert(item: $notFilledFieldErrorMessage) { message in
            Alert(title: Text("–í—ã –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è"),
                  message: Text(message.text),
                  dismissButton: .cancel(Text("–ü–æ–Ω—è—Ç–Ω–æ")))
        }
        .alert(isPresented: $makeOrderError) {
            Alert(title: Text("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ :c"),
                  message: Text("–ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —Ç–µ–º, —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –∑–∞–ø–∏—Å—å —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ"),
                  primaryButton: .default(Text("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑"),
                                          action: tryToMakeOrder),
                  secondaryButton: .cancel(Text("–ü–æ–Ω—è—Ç–Ω–æ")))
        }
        .alert(isPresented: $shouldShowSuccessAlert) {
            Alert(
                title: Text("–£—Ä–∞! üé∂"),
                message: Text("–ó–∞–ø–∏—Å—å –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ñ–¥–µ–º –í–∞—Å –≤ –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–∏"),
                dismissButton: .default(Text("–ü–æ–Ω—è—Ç–Ω–æ")) {
                    bookingNavigation.isBookingUnderway = false
                }
            )
        }
    }
    private var activityIndicator: some View {
        ProgressView()
            .progressViewStyle(CircularProgressViewStyle(tint: .xanadu))
    }
    private var title: some View {
        Text("–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            .font(.system(size: 34, weight: .regular))
            .foregroundColor(.textColor)
    }
    private var content: some View {
        VStack(spacing: 16) {
            nameTextField
            phoneNumberTextField
            commentsTextField
            ZStack {
                makeOrderButton.opacity(makeOrderRequestIsWorking ? 0 : 1)
                activityIndicator.opacity(makeOrderRequestIsWorking ? 1 : 0)
            }
        }
    }
    private var nameTextField: some View {
        TextField("–í–≤–µ–¥–∏—Ç–µ –∏–º—è*", text: $authenticationDetails.clientName)
            .textFieldStyle(StudioTextFieldStyle(when: authenticationDetails.clientName.isEmpty) {
                Text("–í–≤–µ–¥–∏—Ç–µ –∏–º—è*")
                    .foregroundColor(.white.opacity(0.6))
            })
    }
    private var phoneNumberTextField: some View {
        TextField("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*", text: $authenticationDetails.clientPhoneNumber)
            .textFieldStyle(StudioTextFieldStyle(when: authenticationDetails.clientPhoneNumber.isEmpty) {
                Text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*")
                    .foregroundColor(.white.opacity(0.6))
            })
    }
    private var commentsTextField: some View {
        TextField("–ù–∞–ø–∏—à–∏—Ç–µ –ª—é–±—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏", text: $authenticationDetails.comments)
            .textFieldStyle(StudioTextFieldStyle(when: authenticationDetails.comments.isEmpty) {
                Text("–ù–∞–ø–∏—à–∏—Ç–µ –ª—é–±—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏")
                    .foregroundColor(.white.opacity(0.6))
            })
    }
    private var makeOrderButton: some View {
        RoundedButton(text: "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è") {
            tryToMakeOrder()
        }
    }
    private func tryToMakeOrder() {
        if authenticationDetails.clientName.isEmpty {
            notFilledFieldErrorMessage = .init(text: "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –í–∞—à–µ –∏–º—è")
        } else if authenticationDetails.clientPhoneNumber.isEmpty {
            notFilledFieldErrorMessage = .init(text: "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        } else {
            makeOrderRequestIsWorking = true
            studio.makeReservation(params: authenticationDetails.createParamsForRequest()) { result in
                makeOrderRequestIsWorking = false
                switch result {
                case .success:
                    shouldShowSuccessAlert = true
                case .failure:
                    makeOrderError = true
                }
            }
        }
    }
}

struct AuthenticationView_Previews: PreviewProvider {
    static var previews: some View {
        NavigationView {
            AuthenticationView<ArrangementOrderDetails>()
                .environmentObject(ArrangementOrderDetails())
        }
    }
}
